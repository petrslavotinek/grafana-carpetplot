{"version":3,"sources":["../../src/canvas/rendering.js"],"names":["link","scope","elem","attrs","ctrl","data","panel","timeRange","carpet","canvas","context","$carpet","find","tooltip","CarpetplotTooltip","margin","left","right","top","bottom","width","height","min","max","xFrom","xTo","days","chartHeight","chartWidth","chartTop","chartBottom","xAxisHeight","yAxisWidth","yScale","xScale","legendHeight","colorScale","fragment","mouseUpHandler","originalPointColor","pointWidth","pointHeight","pointWidthRounded","pointHeightRounded","highlightContainer","highlightedBucket","$canvas","selection","active","x1","x2","events","on","render","renderingCompleted","addCarpetplot","getMinMax","getColorScale","addCarpetplotSvg","addAxes","addLegend","addCanvas","addPoints","addHighlight","Math","floor","remove","d3Select","append","attr","legend","show","LEGEND_HEIGHT","LEGEND_TOP_MARGIN","xAxis","hideLabels","getXAxisHeight","addYAxis","yAxis","getYAxisWidth","Y_AXIS_TICK_PADDING","addXAxis","select","selectAll","style","scaleTime","domain","moment","startOf","add","range","d3AxisLeft","ticks","getYAxisTicks","tickFormat","value","format","tickSizeInner","tickSizeOuter","tickPadding","call","posY","posX","yAxisGroup","axisText","nodes","_","maxBy","text","getBBox","count","Y_AXIS_TICK_MIN_SIZE","step","ceil","timeHour","every","time","length","diff","axisBottom","getXAxisTicks","timeFormat","labelFormat","tickSize","dayWidth","showWeekends","minBucketWidthToShowWeekends","addDayTicks","timeSaturday","timeMonday","labelFormats","from","to","X_AXIS_TICK_MIN_SIZE","timeDay","timeMonth","insert","$","node","getContext","customBase","document","createElement","container","round","pointScale","scaleLinear","cols","enter","points","d","i","buckets","map","color","nullColor","toDate","drawPoints","clearRect","elements","each","x","y","fillStyle","fillRect","scale","mode","isSpectrumMode","colorModes","SPECTRUM","isSet","stats","colorScales","getColorScaleSpectrum","CUSTOM","getColorScaleCustom","theme","themeProvider","getTheme","colorScheme","colorSchemes","colorInterpolator","d3ScaleChromatic","invert","getStartEnd","scaleSequential","colors","customColors","interpolator","interpolationMap","colorSpace","breakpoints","breakpoint","firstBreakpoint","isDefined","last","fill","forEach","j","Number","MAX_VALUE","maxVal","start","end","unshift","push","d3","interpolate","undefined","prop","onMouseDown","event","pos","getMousePos","isInChart","onMouseUp","one","unbind","selectionRange","abs","MIN_SELECTION_WIDTH","timeFrom","timeTo","timeSrv","setTime","utc","clearSelection","onMouseLeave","clearCrosshair","onMouseMove","destroy","drawSelection","drawCrosshair","bucket","getBucket","highlightPoint","hasValue","resetPointHighLight","equals","xRounded","yRounded","highlightColor","d3Color","darker","getBoundingClientRect","pageX","pageY","window","pageXOffset","pageYOffset","crosshair","showCrosshair","posX1","posX2","selectionX","selectionWidth","drawColorLegend","legendWidth","outerWidth","drawLegend","decimals","unitFormat","formatter","valueFormatter","legendY","legendX","legendContainer","labelMargin","minLabel","createMinMaxLabel","maxLabel","minLabelBox","maxLabelBox","labelHeight","labelWidth","legendMargin","labelY","legendScale","legendAxis","rangeStep","legendColorScale","positionRange","valueScale","xTime","yTime","dayIndex","bucketIndex","getBucketIndex","bucketX","bucketY","has","getTime","hasData","ROUND_DECIMALS","DO_NOT_ROUND","mul","pow","getFragment","empty","axisLeft","DEFAULT_X_TICK_SIZE_PX"],"mappings":"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","file":"rendering.js","sourcesContent":["import {\n    axisBottom,\n    axisLeft as d3AxisLeft,\n    color as d3Color,\n    scaleLinear, scaleSequential,\n    scaleTime,\n    select as d3Select,\n    timeDay,\n    timeFormat, timeHour,\n    timeMonday,\n    timeMonth,\n    timeSaturday,\n} from 'd3';\nimport _, {range} from 'lodash';\nimport moment from 'moment';\nimport $ from 'jquery';\n\nimport {getFragment} from '../fragments';\nimport CarpetplotTooltip from './tooltip';\nimport {valueFormatter} from '../formatting';\nimport {labelFormats} from '../x-axis-label-formats';\nimport themeProvider from '../theme-provider';\nimport colorModes from '../color-modes';\nimport {interpolationMap} from '../color-spaces';\nimport * as d3ScaleChromatic from '../libs/d3-scale-chromatic/index';\n\nconst\n    DEFAULT_X_TICK_SIZE_PX = 100,\n    X_AXIS_TICK_MIN_SIZE = 100,\n    Y_AXIS_TICK_PADDING = 5,\n    Y_AXIS_TICK_MIN_SIZE = 20,\n    MIN_SELECTION_WIDTH = 2,\n    LEGEND_HEIGHT = 40,\n    LEGEND_TOP_MARGIN = 10,\n    DO_NOT_ROUND = 'DO_NOT_DOUND',\n    ROUND_DECIMALS = DO_NOT_ROUND;\n\nexport default function link(scope, elem, attrs, ctrl) {\n    let data, panel, timeRange, carpet, canvas, context;\n\n    const $carpet = elem.find('.carpetplot-panel');\n    const tooltip = new CarpetplotTooltip($carpet, scope);\n\n    const margin = {left: 25, right: 15, top: 10, bottom: 10};\n\n    let width, height,\n        min, max,\n        xFrom, xTo, days,\n        chartHeight, chartWidth,\n        chartTop, chartBottom,\n        xAxisHeight, yAxisWidth,\n        yScale, xScale,\n        legendHeight,\n        colorScale, fragment,\n        mouseUpHandler,\n        originalPointColor,\n        pointWidth, pointHeight,\n        pointWidthRounded, pointHeightRounded,\n        highlightContainer, highlightedBucket,\n        $canvas;\n\n    const selection = {\n        active: false,\n        x1: -1,\n        x2: -1\n    };\n\n    ctrl.events.on('render', () => {\n        render();\n        ctrl.renderingCompleted();\n    });\n\n    function addCarpetplot() {\n        if (!data.data || !data.data[0]) {\n            return;\n        }\n\n        [min, max] = getMinMax();\n        colorScale = getColorScale(min, max);\n\n        addCarpetplotSvg();\n        addAxes();\n        addLegend();\n        addCanvas();\n        addPoints();\n        addHighlight();\n    }\n\n    function addCarpetplotSvg() {\n        width = Math.floor($carpet.width());\n        height = ctrl.height;\n\n        if (carpet) {\n            carpet.remove();\n        }\n\n        carpet = d3Select($carpet[0])\n            .append('svg')\n            .attr('width', width)\n            .attr('height', height);\n    }\n\n    function addAxes() {\n        legendHeight = panel.legend.show ? LEGEND_HEIGHT + LEGEND_TOP_MARGIN : 0;\n        xAxisHeight = panel.xAxis.hideLabels ? 0 : getXAxisHeight();\n        chartHeight = height - margin.top - margin.bottom - legendHeight - xAxisHeight;\n        chartTop = margin.top;\n        chartBottom = chartTop + chartHeight;\n\n        addYAxis();\n        yAxisWidth = panel.yAxis.hideLabels ? 0 : (getYAxisWidth() + Y_AXIS_TICK_PADDING);\n        chartWidth = width - yAxisWidth - margin.right;\n\n        addXAxis();\n\n        if (!panel.yAxis.show) {\n            carpet.select('.axis-y').selectAll('line').style('opacity', 0);\n        }\n\n        if (!panel.xAxis.show) {\n            carpet.select('.axis-x').selectAll('line').style('opacity', 0);\n            carpet.selectAll('.axis-x-weekends').selectAll('line').style('opacity', 0);\n        }\n    }\n\n    function addYAxis() {\n        yScale = scaleTime()\n            .domain([moment().startOf('day').add(1, 'day'), moment().startOf('day')])\n            .range([chartHeight, 0]);\n\n        const yAxis = d3AxisLeft(yScale)\n            .ticks(getYAxisTicks())\n            .tickFormat((value) => moment(value).format('HH:mm'))\n            .tickSizeInner(0 - width)\n            .tickSizeOuter(0)\n            .tickPadding(Y_AXIS_TICK_PADDING);\n\n        if (!panel.yAxis.hideLabels) {\n            carpet.append('g')\n                .attr('class', 'axis axis-y')\n                .call(yAxis);\n\n            const posY = margin.top;\n            const posX = getYAxisWidth() + Y_AXIS_TICK_PADDING;\n\n            const yAxisGroup = carpet.select('.axis-y');\n            yAxisGroup.attr('transform', `translate(${posX},${posY})`);\n            yAxisGroup.select('.domain').remove();\n            yAxisGroup.select('.tick:first-child').remove();\n            yAxisGroup.selectAll('.tick line').remove();\n        }\n    }\n\n    function getYAxisWidth() {\n        const axisText = carpet.selectAll('.axis-y text').nodes();\n        return _.maxBy(\n            axisText,\n            (text) => text.getBBox().width\n        ).getBBox().width;\n    }\n\n    function getYAxisTicks() {\n        const count = chartHeight / Y_AXIS_TICK_MIN_SIZE;\n        const step = Math.max(2, Math.ceil(24 / count));\n        return timeHour.every(step);\n    }\n\n    function addXAxis() {\n        xFrom = moment(data.data[0].time).startOf('day');\n        xTo = moment(data.data[data.data.length - 1].time).startOf('day').add(1, 'day');\n        days = xTo.diff(xFrom, 'days');\n\n        xScale = scaleTime()\n            .domain([xFrom, xTo])\n            .range([0, chartWidth]);\n\n        const xAxis = axisBottom(xScale)\n            .ticks(getXAxisTicks(xFrom, xTo))\n            .tickFormat(timeFormat(panel.xAxis.labelFormat))\n            .tickSize(chartHeight);\n\n        const dayWidth = chartWidth / days;\n\n        const posY = margin.top;\n        const posX = yAxisWidth;\n\n        if (!panel.xAxis.hideLabels) {\n            carpet.append('g')\n                .attr('class', 'axis axis-x')\n                .attr('transform', `translate(${posX},${posY})`)\n                .call(xAxis)\n                .selectAll('text')\n                .style('text-anchor', 'end')\n                .attr('dx', '-.8em')\n                .attr('dy', '.15em')\n                .attr('y', 0)\n                .attr('transform', `translate(${5 + dayWidth / 2},${posY + chartHeight - 10}) rotate(-65)`);\n            carpet.select('.axis-x').selectAll('.tick line, .domain').remove();\n            carpet.select('.axis-x').select('.tick:last-child').remove();\n        }\n\n        if (panel.xAxis.showWeekends && dayWidth >= panel.xAxis.minBucketWidthToShowWeekends) {\n            addDayTicks(posX, posY, timeSaturday.every(1));\n            addDayTicks(posX, posY, timeMonday.every(1));\n        }\n    }\n\n    function addDayTicks(posX, posY, range) {\n        const ticks = axisBottom(xScale)\n            .ticks(range)\n            .tickSize(chartHeight);\n        carpet.append('g')\n            .attr('class', 'axis-x-weekends')\n            .attr('transform', `translate(${posX},${posY})`)\n            .call(ticks)\n            .selectAll('text').remove();\n        carpet.select('.axis-x-weekends .domain').remove();\n    }\n\n    function getXAxisHeight() {\n        return labelFormats.find(({value}) => value === panel.xAxis.labelFormat).height;\n        // const axis = carpet.select('.axis-x');\n        // if (!axis.empty()) {\n        //   const totalHeight = $(axis.node()).height();\n        //   return Math.max(totalHeight, totalHeight - chartHeight);\n        // }\n        // return 0;\n    }\n\n    function getXAxisTicks(from, to) {\n        const count = chartWidth / X_AXIS_TICK_MIN_SIZE;\n        const step = Math.ceil(days / count);\n        if (step < 7) {\n            return timeDay.every(1);\n        }\n        if (step < 28) {\n            return timeMonday.every(1);\n        }\n        return timeMonth.every(1);\n    }\n\n    function addHighlight() {\n        highlightContainer = carpet.append('g')\n            .attr('class', 'points-highlight')\n            .attr('transform', `translate(${yAxisWidth},${margin.top})`);\n    }\n\n    function addCanvas() {\n        if (canvas) {\n            canvas.remove();\n        }\n\n        canvas = d3Select($carpet[0])\n            .insert('canvas', ':first-child')\n            .attr('width', chartWidth)\n            .attr('height', chartHeight)\n            .style('left', `${yAxisWidth}px`)\n            .style('top', `${margin.top}px`);\n\n        $canvas = $(canvas.node());\n\n        context = canvas.node().getContext('2d');\n    }\n\n    function addPoints() {\n        const customBase = document.createElement('custom');\n\n        const container = d3Select(customBase);\n\n        pointWidth = Math.max(0, chartWidth / days);\n        pointWidthRounded = round(pointWidth);\n        pointHeight = Math.max(0, chartHeight / fragment.count);\n        pointHeightRounded = round(pointHeight);\n\n        const pointScale = scaleLinear()\n            .domain([fragment.count, 0])\n            .range([chartHeight, 0]);\n\n        const cols = container\n            .selectAll('custom.carpet-col')\n            .data(data.data)\n            .enter()\n            .append('custom')\n            .attr('class', 'carpet-col');\n\n        const points = cols\n            .selectAll('custom.carpet-point')\n            .data((d, i) => d.buckets.map(value => ({\n                value,\n                time: d.time\n            })))\n            .enter()\n            .append('custom')\n            .attr('class', 'carpet-point')\n            .attr('fillStyle', ({value}) => value === null ? panel.color.nullColor : colorScale(value))\n            .attr('x', (d) => xScale(d.time.toDate()))\n            .attr('y', (d, i) => pointScale(i));\n\n        drawPoints(cols);\n    }\n\n    function drawPoints(cols) {\n        context.clearRect(0, 0, chartWidth, chartHeight);\n\n        const elements = cols.selectAll('custom.carpet-point')\n            .each(function (d, i) {\n                const node = d3Select(this);\n\n                const color = node.attr('fillStyle');\n                const x = round(node.attr('x'));\n                const y = round(node.attr('y'));\n\n                context.fillStyle = color;\n                context.fillRect(x, y, pointWidthRounded, pointHeightRounded);\n            });\n    }\n\n    function getMinMax() {\n        const {scale: {min, max}, color: {mode}} = panel;\n        const isSpectrumMode = mode === colorModes.SPECTRUM;\n        return [\n            isSpectrumMode && isSet(min) ? min : data.stats.min,\n            isSpectrumMode && isSet(max) ? max : data.stats.max\n        ];\n    }\n\n    const colorScales = {\n        [colorModes.SPECTRUM]: getColorScaleSpectrum,\n        [colorModes.CUSTOM]: getColorScaleCustom\n    };\n\n    function getColorScale(min, max) {\n        return colorScales[panel.color.mode](min, max);\n    }\n\n    function getColorScaleSpectrum(min, max) {\n        const theme = themeProvider.getTheme();\n        const colorScheme = _.find(ctrl.colorSchemes, {value: panel.color.colorScheme});\n        const colorInterpolator = d3ScaleChromatic[colorScheme.value];\n        const invert = colorScheme.invert === 'always' || (colorScheme.invert === 'dark' && theme === 'dark');\n        const domain = getStartEnd(min, max, invert);\n\n        return scaleSequential(colorInterpolator)\n            .domain(domain);\n    }\n\n    function getColorScaleCustom(min, max) {\n        let domain = [];\n\n        const colors = panel.color.customColors.map(color => color.color);\n        const interpolator = interpolationMap[panel.color.colorSpace];\n\n        const breakpoints = panel.color.customColors.map(color => color.breakpoint);\n        const firstBreakpoint = breakpoints.find(breakpoint => isDefined(breakpoint));\n        if (isDefined(firstBreakpoint)) {\n            // transform breakpoints\n            let last = 0;\n\n            const fill = (i, value) => {\n                const step = (value - domain[last]) / (i - last);\n                range(i - last - 1).forEach((d, j) => {\n                    domain[last + j + 1] = domain[last] + (j + 1) * step;\n                    // setDomainValue(last + j + 1, domain[last] + (j + 1) * step);\n                });\n            };\n\n            for (let i = 0; i < breakpoints.length; i++) {\n                if (!isDefined(breakpoints[i])) {\n                    // !set\n                    if (i === 0) {\n                        // color first\n                        domain[i] = Math.min(min, firstBreakpoint < min ? -Number.MAX_VALUE : firstBreakpoint);\n                        // setDomainValue(i, Math.min(min, firstBreakpoint));\n                    } else if (i === breakpoints.length - 1) {\n                        // color last\n                        const maxVal = Math.max(max, domain[last]);\n                        fill(i, maxVal);\n                        domain[i] = maxVal;\n                        // setDomainValue(i, maxVal);\n                    }\n                } else if (i === 0) {\n                    // set && color first\n                    domain[i] = breakpoints[i];\n                    // setDomainValue(i, breakpoints[i]);\n                } else {\n                    // set && color 2..N\n                    if (breakpoints[i] >= domain[last]) {\n                        // valid breakpoint\n                        fill(i, breakpoints[i]);\n                        domain[i] = breakpoints[i];\n                        // setDomainValue(i, breakpoints[i]);\n                        last = i;\n                    }\n                }\n            }\n        } else {\n            const [start, end] = getStartEnd(min, max);\n            const step = (end - start) / (colors.length - 1);\n            domain = range(colors.length).map((d, i) => start + i * step);\n        }\n\n        if (domain[0] > min) {\n            domain.unshift(min);\n            colors.unshift(colors[0]);\n        }\n\n        if (domain[domain.length - 1] < max) {\n            domain.push(max);\n            colors.push(colors[colors.length - 1]);\n        }\n\n        return d3\n            .scaleLinear()\n            .domain(domain)\n            .range(colors)\n            .interpolate(interpolator);\n    }\n\n    function isDefined(value) {\n        return value !== undefined && value !== null;\n    }\n\n    function getStartEnd(min, max, invert = false) {\n        invert = panel.color.invert ? !invert : invert;\n        return [invert ? max : min, invert ? min : max];\n    }\n\n    function isSet(prop) {\n        return prop !== undefined && prop !== null && prop !== '';\n    }\n\n    function onMouseDown(event) {\n        const pos = getMousePos(event);\n        if (!isInChart(pos)) {\n            return;\n        }\n\n        selection.active = true;\n        selection.x1 = pos.x;\n\n        mouseUpHandler = () => onMouseUp();\n\n        $(document).one('mouseup', mouseUpHandler);\n    }\n\n    function onMouseUp() {\n        $(document).unbind('mouseup', mouseUpHandler);\n        mouseUpHandler = null;\n        selection.active = false;\n\n        const selectionRange = Math.abs(selection.x2 - selection.x1);\n\n        if (selection.x2 >= 0 && selectionRange > MIN_SELECTION_WIDTH) {\n            const timeFrom = moment(xScale.invert(Math.min(selection.x1, selection.x2))).startOf('day');\n            const timeTo = moment(xScale.invert(Math.max(selection.x1, selection.x2))).startOf('day').add(1, 'day');\n\n            ctrl.timeSrv.setTime({\n                from: moment.utc(timeFrom),\n                to: moment.utc(timeTo)\n            });\n        }\n\n        clearSelection();\n    }\n\n    function onMouseLeave() {\n        clearCrosshair();\n    }\n\n    function onMouseMove(event) {\n        if (!carpet) {\n            return;\n        }\n\n        const pos = getMousePos(event);\n\n        if (selection.active) {\n            clearCrosshair();\n            tooltip.destroy();\n\n            selection.x2 = pos.x;\n            drawSelection(selection.x1, selection.x2);\n        } else {\n            drawCrosshair(pos);\n\n            const bucket = getBucket(pos);\n            tooltip.show(pos, bucket);\n            highlightPoint(pos, bucket);\n        }\n    }\n\n    function highlightPoint(pos, bucket) {\n        if (!isInChart(pos) || !bucket || !bucket.hasValue()) {\n            resetPointHighLight();\n            return;\n        }\n\n        if (bucket.equals(highlightedBucket)) {\n            return;\n        } else {\n            resetPointHighLight();\n        }\n\n        highlightedBucket = bucket;\n\n        const {value, xRounded: x, yRounded: y} = bucket;\n\n        const color = colorScale(value);\n        const highlightColor = d3Color(color).darker(1);\n        originalPointColor = color;\n\n        highlightContainer\n            .append('rect')\n            .attr('x', x)\n            .attr('y', y)\n            .attr('width', pointWidthRounded)\n            .attr('height', pointHeightRounded)\n            .attr('fill', highlightColor);\n    }\n\n    function resetPointHighLight() {\n        if (!highlightedBucket) {\n            return;\n        }\n\n        highlightContainer.select('rect').remove();\n\n        highlightedBucket = null;\n    }\n\n    function getMousePos(event) {\n        const {left, top} = $canvas[0].getBoundingClientRect();\n        const {pageX, pageY} = event;\n        const pos = {\n            x: pageX - window.pageXOffset - left,\n            y: pageY - window.pageYOffset - top,\n            pageX,\n            pageY\n        };\n        return pos;\n    }\n\n    function drawCrosshair(pos) {\n        if (!carpet || !isInChart(pos)) {\n            clearCrosshair();\n            return;\n        }\n\n        carpet.selectAll('.heatmap-crosshair').remove();\n\n        const x = pos.x + yAxisWidth;\n        const y = pos.y + chartTop;\n\n        const crosshair = carpet.append('g')\n            .attr('class', 'heatmap-crosshair');\n\n        if (panel.xAxis.showCrosshair) {\n            crosshair.append('line')\n                .attr('x1', x)\n                .attr('y1', chartTop)\n                .attr('x2', x)\n                .attr('y2', chartBottom)\n                .attr('stroke-width', 1);\n        }\n\n        if (panel.yAxis.showCrosshair) {\n            crosshair.append('line')\n                .attr('x1', yAxisWidth)\n                .attr('y1', y)\n                .attr('x2', yAxisWidth + chartWidth)\n                .attr('y2', y)\n                .attr('stroke-width', 1);\n        }\n    }\n\n    function clearCrosshair() {\n        if (!carpet) {\n            return;\n        }\n\n        carpet.selectAll('.heatmap-crosshair').remove();\n    }\n\n    function drawSelection(posX1, posX2) {\n        if (!carpet) {\n            return;\n        }\n\n        carpet.selectAll('.carpet-selection').remove();\n        const selectionX = Math.min(posX1, posX2) + yAxisWidth;\n        const selectionWidth = Math.abs(posX1 - posX2);\n\n        if (selectionWidth > MIN_SELECTION_WIDTH) {\n            carpet.append('rect')\n                .attr('class', 'carpet-selection')\n                .attr('x', selectionX)\n                .attr('width', selectionWidth)\n                .attr('y', chartTop)\n                .attr('height', chartHeight);\n        }\n    }\n\n    function clearSelection() {\n        selection.x1 = -1;\n        selection.x2 = -1;\n\n        if (!carpet) {\n            return;\n        }\n\n        carpet.selectAll('.carpet-selection').remove();\n    }\n\n    function drawColorLegend() {\n        if (!colorScale) {\n            return;\n        }\n        d3Select(\"#heatmap-color-legend\").selectAll(\"rect\").remove();\n\n        const legend = d3Select(\"#heatmap-color-legend\");\n        const legendWidth = Math.floor($(d3Select(\"#heatmap-color-legend\").node()).outerWidth());\n        const legendHeight = d3Select(\"#heatmap-color-legend\").attr(\"height\");\n\n        drawLegend(legend, legendWidth, legendHeight);\n    }\n\n    function addLegend() {\n        if (!panel.legend.show) {\n            return;\n        }\n\n        const decimals = panel.data.decimals;\n        const format = panel.data.unitFormat;\n        const formatter = valueFormatter(format, decimals);\n\n        const legendY = yAxisWidth;\n        const legendX = margin.top + chartHeight + xAxisHeight + LEGEND_TOP_MARGIN;\n\n        const legendContainer = carpet.append('g')\n            .attr('class', 'carpet-legend')\n            .attr('transform', `translate(${legendY},${legendX})`);\n\n        const legendHeight = LEGEND_HEIGHT / 2;\n        const labelMargin = 5;\n\n        const minLabel = createMinMaxLabel(legendContainer, formatter(min));\n        const maxLabel = createMinMaxLabel(legendContainer, formatter(max));\n        const minLabelBox = minLabel.node().getBBox();\n        const maxLabelBox = maxLabel.node().getBBox();\n\n        const labelHeight = Math.ceil(Math.max(minLabelBox.height, maxLabelBox.height));\n        const labelWidth = Math.ceil(Math.max(minLabelBox.width, maxLabelBox.width));\n        const legendMargin = labelWidth + 2 * labelMargin;\n        const labelY = (legendHeight - labelHeight + 8) / 2;\n\n        minLabel\n            .attr('x', legendMargin / 2)\n            .attr('y', labelY);\n        maxLabel\n            .attr('x', chartWidth - legendMargin / 2)\n            .attr('y', labelY);\n\n        const legend = legendContainer.append('g')\n            .attr('transform', `translate(${legendMargin},0)`);\n\n        const legendWidth = chartWidth - 2 * legendMargin;\n        drawLegend(legend, legendWidth, legendHeight);\n\n        const legendScale = scaleLinear()\n            .domain([min, max])\n            .range([0, legendWidth]);\n\n        const legendAxis = axisBottom(legendScale)\n            .ticks(20)\n            .tickFormat(formatter)\n            .tickSize(legendHeight);\n\n        legendContainer.append('g')\n            .attr('class', 'legend-axis')\n            .call(legendAxis)\n            .attr('transform', `translate(${legendMargin},0)`)\n            .select('.domain').remove();\n    }\n\n    function createMinMaxLabel(legendContainer, text) {\n        return legendContainer.append('text')\n            .attr('class', 'min-max-label')\n            .attr('y', 0)\n            .attr('x', 0)\n            .attr('dy', '0.71em')\n            .attr('text-anchor', 'middle')\n            .text(text);\n    }\n\n    function drawLegend(legend, legendWidth, legendHeight, rangeStep = 2) {\n        const legendColorScale = getColorScale(0, legendWidth, min, max);\n        const positionRange = range(0, legendWidth, rangeStep);\n\n        const valueScale = scaleLinear()\n            .domain([0, legendWidth])\n            .range([min, max]);\n\n        return legend.selectAll(\".heatmap-color-legend-rect\")\n            .data(positionRange)\n            .enter()\n            .append(\"rect\")\n            .attr(\"x\", d => d)\n            .attr(\"y\", 0)\n            .attr(\"width\", rangeStep + 1) // Overlap rectangles to prevent gaps\n            .attr(\"height\", legendHeight)\n            .attr(\"stroke-width\", 0)\n            .attr(\"fill\", d => colorScale(valueScale(d)));\n    }\n\n    // Helpers\n\n    function isInChart(pos) {\n        const {x, y} = pos;\n\n        return x > 0\n            && x < chartWidth\n            && y > 0\n            && y < chartHeight;\n    }\n\n    function getBucket(pos) {\n        const {x, y} = pos;\n\n        const xTime = moment(xScale.invert(x)).startOf('day');\n        const yTime = moment(yScale.invert(y));\n\n        const dayIndex = xTime.diff(xFrom, 'days');\n        const bucketIndex = fragment.getBucketIndex(yTime);\n\n        const bucketX = xScale(xTime.toDate());\n        const bucketY = pointHeight * bucketIndex;\n\n        return _.has(data, `data[${dayIndex}].buckets[${bucketIndex}]`)\n            ? {\n                x: bucketX,\n                y: bucketY,\n                xRounded: round(bucketX),\n                yRounded: round(bucketY),\n                time: fragment.getTime(data.data[dayIndex].time, bucketIndex),\n                value: data.data[dayIndex].buckets[bucketIndex],\n                hasValue() {\n                    return this.value !== null;\n                },\n                equals(bucket) {\n                    return bucket && bucket.x === this.x && bucket.y === this.y;\n                }\n            }\n            : null;\n    }\n\n    function hasData() {\n        return data && data.data;\n    }\n\n    function round(value, decimals = ROUND_DECIMALS) {\n        if (decimals === DO_NOT_ROUND) {\n            return value;\n        }\n        if (!decimals) {\n            return Math.round(value);\n        }\n        const mul = Math.pow(10, decimals);\n        return Math.round(value * mul) / mul;\n    }\n\n    // Render\n\n    function render() {\n        data = ctrl.data;\n        panel = ctrl.panel;\n        timeRange = ctrl.range;\n\n        fragment = getFragment(panel.fragment);\n\n        addCarpetplot();\n\n        if (!d3Select(\"#heatmap-color-legend\").empty()) {\n            drawColorLegend();\n        }\n\n        scope.hasData = hasData;\n        scope.isInChart = isInChart;\n    }\n\n    $carpet.on('mousedown', onMouseDown);\n    $carpet.on('mousemove', onMouseMove);\n    $carpet.on('mouseleave', onMouseLeave);\n}\n"]}